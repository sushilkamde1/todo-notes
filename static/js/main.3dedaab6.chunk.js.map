{"version":3,"sources":["components/DisplayTodo.js","components/InputTodo.js","components/Todo.js","components/Header.js","App.js","index.js"],"names":["DisplayTodo","items","editItem","deleteItem","className","map","curElm","time","name","onClick","id","InputTodo","inputRef","inputdata","setInputdata","keyprss","addItem","toggleButton","type","placeholder","ref","value","onChange","event","target","onKeyPress","e","key","Todo","useRef","useState","lists","localStorage","getItem","JSON","parse","getLocalData","setItems","setToggleButton","editedItem","setEditedItem","useEffect","current","focus","setItem","stringify","myNewInput","Date","getTime","toString","toLocaleString","alert","todo_item_edited","find","updateItems","filter","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dedaab6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DisplayTodo = ({ items, editItem, deleteItem }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {items.map((curElm) => {\r\n            return (\r\n              <div className=\"card shadow my-2 col-sm-3\" key={curElm.id}>\r\n                <div className=\"card-body\">\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                    {curElm.time}\r\n                  </h6>\r\n                  <h5 className=\"card-text py-3\">{curElm.name}</h5>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <button\r\n                      className=\"btn btn-outline-success btn-sm\"\r\n                      onClick={() => editItem(curElm.id)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-outline-danger btn-sm\"\r\n                      onClick={() => deleteItem(curElm.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayTodo;\r\n","import React from \"react\";\r\n\r\nconst InputTodo = ({\r\n  inputRef,\r\n  inputdata,\r\n  setInputdata,\r\n  keyprss,\r\n  addItem,\r\n  toggleButton,\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"my-3\">Add Your List Here</h3>\r\n      <div className=\"input-group mb-3\">\r\n        {/* input section  */}\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Add Items\"\r\n          ref={inputRef}\r\n          value={inputdata}\r\n          onChange={(event) => setInputdata(event.target.value)}\r\n          onKeyPress={(e) => keyprss(e.key)}\r\n        />\r\n        {toggleButton ? (\r\n          <button className=\"btn btn-outline-secondary\" onClick={addItem}>\r\n            Update\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-outline-secondary\" onClick={addItem}>\r\n            Add\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport DisplayTodo from \"./DisplayTodo\";\r\nimport InputTodo from \"./InputTodo\";\r\n\r\n// get the localStorage data\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"myTodoList\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const inputRef = useRef();\r\n  const [inputdata, setInputdata] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n  const [editedItem, setEditedItem] = useState(\"\");\r\n\r\n  // onpage load input focus\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  //   Add the Items\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"Please fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElm) => {\r\n          if (curElm.id === editedItem) {\r\n            return { ...curElm, name: inputdata };\r\n          }\r\n          return curElm;\r\n        })\r\n      );\r\n      setInputdata(\"\");\r\n      setEditedItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInput = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n        time: new Date().toLocaleString(),\r\n      };\r\n      setItems([...items, myNewInput]);\r\n      setInputdata(\"\");\r\n    }\r\n  };\r\n\r\n  //   Delete Items\r\n  const deleteItem = (id) => {\r\n    const updateItems = items.filter((curElm) => {\r\n      return curElm.id !== id;\r\n    });\r\n    setItems(updateItems);\r\n  };\r\n\r\n  //   add localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"myTodoList\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  //   edit item\r\n  const editItem = (id) => {\r\n    const todo_item_edited = items.find((curElm) => {\r\n      return curElm.id === id;\r\n    });\r\n    setInputdata(todo_item_edited.name);\r\n    setEditedItem(id);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  // on enter press\r\n  const keyprss = (key) => {\r\n    if (key === \"Enter\") {\r\n      if (!inputdata) {\r\n        alert(\"Please fill the data\");\r\n      } else if (inputdata && toggleButton) {\r\n        setItems(\r\n          items.map((curElm) => {\r\n            if (curElm.id === editedItem) {\r\n              return { ...curElm, name: inputdata };\r\n            }\r\n            return curElm;\r\n          })\r\n        );\r\n        setInputdata(\"\");\r\n        setEditedItem(null);\r\n        setToggleButton(false);\r\n      } else {\r\n        const myNewInput = {\r\n          id: new Date().getTime().toString(),\r\n          name: inputdata,\r\n          time: new Date().toLocaleString(),\r\n        };\r\n        setItems([...items, myNewInput]);\r\n        setInputdata(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* input data  */}\r\n      <InputTodo\r\n        inputRef={inputRef}\r\n        inputdata={inputdata}\r\n        setInputdata={setInputdata}\r\n        keyprss={keyprss}\r\n        addItem={addItem}\r\n        toggleButton={toggleButton}\r\n      />\r\n      {/* todo list display section  */}\r\n      <DisplayTodo items={items} editItem={editItem} deleteItem={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"shadow text-center p-3\"> Sticky Notes </h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import \"./App.css\";\nimport Todo from \"./components/Todo\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}